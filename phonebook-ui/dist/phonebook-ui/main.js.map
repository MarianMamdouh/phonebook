{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/jumia-phonebook-dashboard/jumia-phonebook-dashboard.component.ts","./src/app/jumia-phonebook-dashboard/jumia-phonebook-dashboard.component.html","./src/app/jumia-urls-config.ts","./src/app/models/customer.filter.ts","./src/app/services/country.service.ts","./src/app/services/customer.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'phonebook-ui';\n  message = '';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<jumia-phonebook-dashboard></jumia-phonebook-dashboard>\n\n","//Angular dependencies\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n//Components\nimport { AppComponent } from './app.component';\nimport { JumiaPhonebookDashboardComponent } from './jumia-phonebook-dashboard/jumia-phonebook-dashboard.component';\n\n//Services\nimport { CustomerService } from './services/customer.service';\nimport { CountryService } from \"./services/country.service\";\n\n//Primeng UI Components\nimport { TableModule } from 'primeng/table';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { ButtonModule } from 'primeng/button';\nimport { ToastModule } from 'primeng/toast';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageService } from 'primeng/api';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JumiaPhonebookDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    TableModule,\n    PaginatorModule,\n    ButtonModule,\n    FormsModule,\n    ToastModule,\n    MessagesModule\n  ],\n  providers: [\n    CustomerService,\n    CountryService,\n    MessageService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {CustomerService} from '../services/customer.service';\nimport {Customer} from '../models/customer';\nimport { Component, OnInit } from '@angular/core';\nimport { CountryService } from \"../services/country.service\";\nimport { SelectItem, Message, MessageService } from \"primeng/api\";\nimport { CustomerFilter } from \"../models/customer.filter\";\n\n@Component({\n    selector: 'jumia-phonebook-dashboard',\n    templateUrl: './jumia-phonebook-dashboard.component.html',\n    styleUrls: ['./jumia-phonebook-dashboard.component.css']\n})\nexport class JumiaPhonebookDashboardComponent implements OnInit {\n    customers: Customer[] = [];\n    totalRecords: number = 0;\n    pageSize: number = 10;\n    rowsPerPageOptions: number[] = [10, 20, 50];\n    selectedPage: number = 0;\n    countryNamesOptions: SelectItem[] = [];\n    stateOptions: SelectItem[] = [];\n    customerFilter: CustomerFilter;\n    msgs: Message[] = [];\n\n    constructor(private customerService: CustomerService,\n                private countryService: CountryService,\n                private messageService: MessageService) {\n        this.customerFilter = new CustomerFilter();\n    }\n\n    ngOnInit() {\n        this.filterCustomers();\n        this.getCountryNames();\n        this.fillStateOptions();\n    }\n\n    filterCustomers() {\n        let params = \"\";\n        if (this.customerFilter.countryNameFilter) {\n            params += \"countryName=\" + this.customerFilter.countryNameFilter + \"&\"\n        }\n        if (this.customerFilter.stateFilter) {\n            params += \"state=\" + this.customerFilter.stateFilter + \"&\"\n        }\n        this.clearNotfication();\n        return this.customerService.filterCustomers(params, this.selectedPage, this.pageSize)\n            .then(response => {\n                this.customers = response.content;\n                this.totalRecords = response.totalElements;\n            }\n        ).catch(() => {\n            this.showError(\"Retrieving customer data has failed!\");\n        });\n    }\n\n    getCountryNames() {\n        this.countryService.getCountryNames().then(response => {\n            this.fillCountryNamesOptions(response);\n            }\n        )\n    }\n\n    fillStateOptions() {\n        this.stateOptions = [];\n        this.stateOptions.push({label: \"Valid\", value: \"true\"});\n        this.stateOptions.push({label: \"Invalid\", value: \"false\"});\n    }\n\n    getPage(event) {\n        this.selectedPage = event.page;\n        this.pageSize = event.rows;\n        this.filterCustomers();\n    }\n\n    fillCountryNamesOptions(countryNamesOptions) {\n        this.countryNamesOptions = [];\n        countryNamesOptions.forEach(countryNamesOptions => {\n            this.countryNamesOptions.push({label: countryNamesOptions, value: countryNamesOptions});\n        });\n    }\n\n    clearNotfication() {\n        this.msgs = [];\n    }\n\n    showError(text) {\n        this.messageService.add({severity:'error', summary:'Error', detail: text});\n    }\n}\n","<p-toast position=\"top-right\"></p-toast>\n<div class=\"app-header\">\n  <h2>Jumia Phonebook<i class=\"pi pi-book app-header-icon\"></i></h2>\n  <div class=\"filters\">\n    <div class=\"filter-div\">\n      <span class=\"p-float-label\">\n        <p-dropdown id=\"selectCountryDropdown\"\n                    styleClass=\"filter-dropdown\"\n                    [autoDisplayFirst]=\"false\"\n                    (onChange)=\"filterCustomers()\"\n                    [showClear]=\"true\"\n                    [(ngModel)]=\"customerFilter.countryNameFilter\"\n                    [options]=\"countryNamesOptions\">\n        </p-dropdown>\n        <label for=\"selectCountryDropdown\">Filter by Country</label>\n      </span>\n    </div>\n    <div class=\"filter-div\">\n      <span class=\"p-float-label\">\n        <p-dropdown id=\"selectValidtyDropdown\"\n                    styleClass=\"filter-dropdown\"\n                    [autoDisplayFirst]=\"false\"\n                    (onChange)=\"filterCustomers()\"\n                    [showClear]=\"true\"\n                    [(ngModel)]=\"customerFilter.stateFilter\"\n                    [options]=\"stateOptions\">\n          <ng-template let-option pTemplate=\"item\">\n            <span >{{option.label}}</span>\n          </ng-template>\n        </p-dropdown>\n        <label for=\"selectValidtyDropdown\">Filter by Validity</label>\n      </span>\n    </div>\n  </div>\n</div>\n<hr>\n<div class=\"dashboard\">\n  <p-table #dt [value]=\"customers\" [rows]=\"pageSize\" >\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n        <th pSortableColumn=\"phone\">Phone Number <p-sortIcon field=\"phone\"></p-sortIcon></th>\n        <th pSortableColumn=\"countryName\">Country <p-sortIcon field=\"countryName\"></p-sortIcon></th>\n        <th pSortableColumn=\"valid\">Valid <p-sortIcon field=\"valid\"></p-sortIcon></th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-customer>\n      <tr class=\"data-row-striped\">\n        <td class=\"data-cell-name\">{{customer.name}}</td>\n        <td class=\"data-cell-phone\">{{customer.phone}}</td>\n        <td class=\"data-cell-country\">{{customer.countryName}}</td>\n        <td class=\"data-cell-valid\"><i class=\"pi pi-circle-on\" [class]=\"'is-valid-badge status-' + customer.valid\"></i></td>\n      </tr>\n    </ng-template>\n  </p-table>\n  <div>\n    <p class=\"total-records\">Total number of records: {{totalRecords}}</p>\n    <p-paginator (onPageChange)=\"getPage($event)\"\n                 [rowsPerPageOptions]=\"[10,20,50]\"\n                 [rows]=\"10\"\n                 totalRecords=\"{{totalRecords}}\">\n    </p-paginator>\n  </div>\n</div>\n","export class JumiaUrlsConfig {\n    public static get ENVIROMENT(): string {\n        return \"http://localhost:8080/\";\n    }\n\n    public static get COUNTRIES_URL(): string {\n        return this.ENVIROMENT + \"countries\";\n    }\n\n    public static get CUSTOMERS_FILTER_URL(): string {\n        return this.ENVIROMENT + \"customers/filter?\";\n    }\n}\n","export class CustomerFilter {\n    countryNameFilter: string;\n    stateFilter: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JumiaUrlsConfig } from '../jumia-urls-config';\n\n@Injectable()\nexport class CountryService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    public getCountryNames(): Promise<any> {\n        return this.http.get(JumiaUrlsConfig.COUNTRIES_URL)\n            .toPromise()\n            .catch(err => {\n                return Promise.reject(err.message || err);\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JumiaUrlsConfig } from '../jumia-urls-config';\n\n@Injectable()\nexport class CustomerService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    public filterCustomers(params: string, selectedPage?: number, pageSize?: number): Promise<any> {\n        return this.http.get(JumiaUrlsConfig.CUSTOMERS_FILTER_URL + params + (!pageSize ? '' : \"size=\" + pageSize + \"&page=\" + selectedPage))\n            .toPromise()\n            .catch(err => {\n                return Promise.reject(err.message || err);\n            });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}